{"version":3,"sources":["components/navigation/nav-bar.jsx","components/navigation/sidebar.jsx","components/navigation/footer-bar.jsx","components/pages/home.jsx","components/pages/who-we-are.jsx","components/pages/survey.jsx","components/pages/gallery.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","toggleSidebar","sidebarIsOpen","history","useHistory","className","src","alt","onClick","push","activeClassName","exact","to","size","Sidebar","isOpen","style","display","FooterBar","href","Home","WhoWeAre","Survey","Gallery","App","useState","sidebarOpen","setSidebarOpen","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.baf489c5.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  NavLink,\n  useHistory\n} from 'react-router-dom';\nimport { FiMenu } from \"react-icons/fi\";\nimport './nav-bar.css';\n\nconst NavBar = ({toggleSidebar, sidebarIsOpen}) => {\n  const history = useHistory();\n  return (\n    <div className=\"nav-bar\">\n      <div className=\"logo-bar\">\n        <img className=\"gs-logo\" src=\"logo_transparent.png\" alt=\"Galaxy Sounds Logo\" onClick={() => history.push(\"/\")}></img>\n      </div>\n      <div className=\"menu-bar\">\n        {\n          !sidebarIsOpen \n          && <ul>\n            <li><NavLink activeClassName=\"active-class\" exact to=\"/\">Home</NavLink></li>\n            <li><NavLink activeClassName=\"active-class\" exact to=\"/who-we-are\">Who We Are</NavLink></li>\n            <li><NavLink activeClassName=\"active-class\" exact to=\"/survey\">Survey</NavLink></li>\n            <li><NavLink activeClassName=\"active-class\" exact to=\"/gallery\">Gallery</NavLink></li>\n          </ul>\n        }\n        <p className=\"menu-icon\" onClick={() => toggleSidebar(!sidebarIsOpen)}><FiMenu size=\"25\"/></p>\n      </div>\n      \n    </div>\n  )\n};\n\nNavBar.propTypes = {\n  toggleSidebar: propTypes.func.isRequired,\n  sidebarIsOpen: propTypes.bool.isRequired,\n};\n\nexport default NavBar;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport {\n  AiOutlineClose,\n  AiOutlineHome,\n  AiOutlineTeam,\n  AiOutlinePieChart,\n  AiOutlinePicture,\n} from \"react-icons/ai\";\nimport './sidebar.css';\n\nconst Sidebar = ({toggleSidebar, isOpen}) => {\n  return (\n    <div className=\"sidebar\" style={isOpen ? { display: 'flex' } : {display: 'none'}}>\n      <div className=\"backdrop\" onClick={() => toggleSidebar(!isOpen)} />\n      <div className=\"sidebar-content\">\n        <div className=\"links\">\n            <p className=\"exit-sidebar\" onClick={() => toggleSidebar(!isOpen)}>\n              <AiOutlineClose/>\n            </p>\n            <NavLink activeClassName=\"active-class\" exact to=\"/\" onClick={() => toggleSidebar(!isOpen)}>\n              <AiOutlineHome className=\"icon\" size=\"20px\"/>Home\n            </NavLink>\n            <NavLink activeClassName=\"active-class\" exact to=\"/who-we-are\" onClick={() => toggleSidebar(!isOpen)}>\n              <AiOutlineTeam className=\"icon\" size=\"20px\"/>Who We Are\n            </NavLink>\n            <NavLink activeClassName=\"active-class\" exact to=\"/survey\" onClick={() => toggleSidebar(!isOpen)}>\n              <AiOutlinePieChart className=\"icon\" size=\"20px\"/>Survey\n            </NavLink>\n            <NavLink activeClassName=\"active-class\" exact to=\"/gallery\" onClick={() => toggleSidebar(!isOpen)}>\n              <AiOutlinePicture className=\"icon\" size=\"20px\"/>Gallery\n            </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  isOpen: propTypes.bool.isRequired,\n  toggleSidebar: propTypes.func.isRequired,\n};\n\nexport default Sidebar;","import React from 'react';\nimport { FaInstagram, FaFacebookSquare, FaTwitter, FaYoutube } from \"react-icons/fa\";\nimport './footer-bar.css';\n\nconst FooterBar = () => {\n  return (\n    <div className=\"footer-bar\">\n      <div className=\"social-media-container\">\n        <a href=\"https://twitter.com/galaxysoundsca\">\n          <FaTwitter size=\"30\"></FaTwitter>\n        </a>\n      </div>\n      <div className=\"social-media-container\">\n        <a href=\"https://www.instagram.com/galaxysoundsca/\">\n          <FaInstagram size=\"30\"></FaInstagram>\n        </a>\n      </div>\n      <p>@galaxysoundsca</p>\n      <div className=\"social-media-container\">\n        <a href=\"https://www.facebook.com/galaxysoundsca\">\n          <FaFacebookSquare size=\"30\"></FaFacebookSquare>\n        </a>\n      </div>\n      <div className=\"social-media-container\">\n        <a href=\"https://www.youtube.com/channel/UCUa7UQjhZ5NVyYrLG6MTJyw?view_as=subscriber\">\n          <FaYoutube size=\"30\"></FaYoutube>\n        </a>\n      </div>\n    </div>\n  )\n};\n\nexport default FooterBar;","import React from 'react';\nimport {\n  useHistory\n} from 'react-router-dom';\nimport './home.css';\n\nconst Home = () => {\n  const history = useHistory();\n  return (\n    <div className=\"contents-block\">\n      <h1>Welcome!</h1>\n      <p>\n        Galaxy Sounds is a newly established pedal company currently in the developmental stage of our first product, a <span className=\"no-wrap\">multi-effects</span> instrument pedal.\n        We're based on Earth, more specifically, St. John's, Newfoundland. We hope to create musical solutions that are intuitive and complement your play style.\n      </p>\n      <p>\n        Without further ado, we would like to announce our <span className=\"no-wrap\">multi-effects</span> pedal, the <em>Asteroid</em>, \"rock among the stars\".\n        This pedal has unique features that we're REALLY excited about, but we can't go too into detail right now.\n        If you would like to be on our mailing list, you can <span className=\"no-wrap\">opt-in</span> at the end of our survey.\n      </p>\n      <p>\n        What survey you ask? To ensure we haven't overlooked the things that matter to you, we're looking for your input to ensure this thing actually does kick ass.\n        The best way you can help us right now is by taking our survey. To find out more, click <span className=\"click-to-survey\" onClick={() => history.push(\"/survey\")}>here</span>.\n      </p>\n      <p>\n        Our team is committed to creating a quality pedal that brings musicians together.\n      </p>\n      <p>\n        Check back for updates!\n      </p>\n    </div>\n  )\n};\n\nexport default Home;","import React from 'react';\nimport './who-we-are.css';\n\nconst WhoWeAre = () => {\n  return (\n  <div className=\"contents-block\">\n    <h1 className=\"who-we-are-heading\">Meet the Galaxy Sounds Team</h1>\n    <div className=\"employee-section\">\n      <div className=\"img-container\">\n        <img src=\"brett.png\" alt=\"Brett Heistinger\"></img>\n      </div>\n      <div className=\"employee-info\">\n        <h4>Brett Heistinger</h4>\n        <p>\n          Hello, my name is Brett Heistinger and I am one of the <span className=\"no-wrap\">co-founders</span> of Galaxy Sounds.\n          I'm currently a Hardware Designer, providing electrical and mechanical solutions to our products.\n          Being able to develop solutions for fellow musicians has been a dream of mine for a while\n          and I can't put into words how excited I am for Galaxy Sounds. Actually, you could say I'm over the moon about it...\n        </p>\n      </div>\n    </div>\n    <div className=\"employee-section\">\n      <div className=\"img-container\">\n        <img src=\"matthew.jpg\" alt=\"Matthew Hiscock\"></img>\n      </div>\n      <div className=\"employee-info\">\n        <h4>Matthew Hiscock</h4>\n        <p>\n          Hey all! My name is Matthew Hiscock and I am super excited to be helping bring Galaxy Sounds to life.\n          At Galaxy I am the Principle Embedded Systems Designer, which is an area of technology I love working on.\n          I have past experience in the firmware development field, and I am incredibly eager to bring those skills to Galaxy Sounds.\n        </p>\n      </div>\n    </div>\n    <div className=\"employee-section\">\n      <div className=\"img-container\">\n        <img src=\"jake.png\" alt=\"Jake Miller\"></img>\n      </div>\n      <div className=\"employee-info\">\n        <h4>Jake Miller</h4>\n        <p>\n          Hey! My name is Jake Miller I am a <span className=\"no-wrap\">co-founder</span> and Hardware Designer here at Galaxy Sounds.\n          My main role is electrical and mechanical design support on our products during all phases of their development.\n          I am really excited for Galaxy Sounds because we have a great team and we are going to make some really cool stuff.\n        </p>\n      </div>\n    </div>\n    <div className=\"employee-section\">\n      <div className=\"img-container\">\n        <img src=\"matt.png\" alt=\"Matt Hickey\"></img>\n      </div>\n      <div className=\"employee-info\">\n        <h4>Matt Hickey</h4>\n        <p>\n          Hey, I’m Matt Hickey, a software developer for Galaxy Sounds.\n          My responsibility is primarily frontend development, providing users with an elegant and intuitive interface to program their board the way they want.\n          Looking forward to bringing an affordable yet powerful product to music enthusiasts everywhere!\n        </p>\n      </div>\n    </div>\n    <div className=\"employee-section\">\n      <div className=\"img-container\">\n        <img src=\"nathaniel.jpg\" alt=\"Nathaniel Johnson\"></img>\n      </div>\n      <div className=\"employee-info\">\n        <h4>Nathaniel Johnson</h4>\n        <p>\n          Hello, my name is Nathaniel Johnson and I am a software developer for Galaxy Sounds.\n          I will be working mostly with the frontend and backend to ensure our customers can easily edit and create their sounds through the internet.\n          The sky is the limit for what is possible with our Galaxy pedal!\n        </p>\n      </div>\n    </div>\n  </div>\n  )\n};\n\nexport default WhoWeAre;","import React from 'react';\nimport './survey.css';\n\nconst Survey = () => {\n  return (\n    <div className=\"contents-block\">\n      <h1>Our Survey</h1>\n      <p>\n        To ensure we haven't overlooked the things that matter to you, we're looking for your input to ensure our <span className=\"no-wrap\">multi-effects</span> pedal actually does kick ass.\n      </p>\n      <p>\n        Feel free to go into as much detail with your answers as you like. Not all questions require answers.\n      </p>\n      <p>\n        We appreciate you taking the time to fill out this survey. Thank you and enjoy!\n      </p>\n      <a href=\"https://forms.gle/BpyFHet4dAovCZAU8\"><button className=\"survey-button\">Take Survey</button></a>\n    </div>\n  )\n};\n\nexport default Survey;","import React from 'react';\nimport './gallery.css';\n\nconst Gallery = () => {\n  return (\n    <div className=\"contents-block\">\n      \n      <div className=\"asteroid-logo\">\n        <img src=\"asteroid_logo.png\" alt=\"Asteroid - logo\"></img>\n      </div>\n\n      <div className=\"asteroid-gallery\">\n        <img src=\"pedal1.png\" alt=\"Asteroid - angle 1\"></img>\n        <img src=\"pedal2.png\" alt=\"Asteroid - angle 2\"></img>\n        <img src=\"pedal3.png\" alt=\"Asteroid - angle 3\"></img>\n      </div>\n\n      <div className=\"asteroid-logo-icon\">\n        <img src=\"asteroid_icon.png\" alt=\"Asteroid - icon\"></img>\n      </div>\n      \n    </div>\n  )\n};\n\nexport default Gallery;","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport NavBar from './components/navigation/nav-bar';\nimport Sidebar from './components/navigation/sidebar';\nimport FooterBar from './components/navigation/footer-bar';\nimport Home from './components/pages/home';\nimport WhoWeAre from './components/pages/who-we-are';\nimport Survey from './components/pages/survey';\nimport Gallery from './components/pages/gallery';\nimport './App.css';\n\nconst App = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  return (\n  <Router>\n    <div className=\"App\">\n      <header>\n        <NavBar toggleSidebar={setSidebarOpen} sidebarIsOpen={sidebarOpen}/>\n      </header>\n      <section>\n        <div className=\"App-router\">\n          <Switch>\n            <Route path=\"/who-we-are\">\n              <WhoWeAre />\n            </Route>\n            <Route path=\"/survey\">\n              <Survey />\n            </Route>\n            <Route path=\"/gallery\">\n              <Gallery />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </section>\n      <header>\n        <Sidebar toggleSidebar={setSidebarOpen} isOpen={sidebarOpen}/>\n      </header>\n      <footer>\n        <FooterBar />\n      </footer>\n    </div>\n  </Router>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}